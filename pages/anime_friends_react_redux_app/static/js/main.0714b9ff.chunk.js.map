{"version":3,"sources":["actions.js","api/api.js","constants.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","registerServiceWorker.js","reducers.js","index.js"],"names":["requestAnimeFriends","dispatch","link","type","fetch","then","response","json","data","payload","catch","error","Card","name","email","profile","className","alt","src","CardList","animeFriends","map","user","i","key","id","SearchBox","searchfield","searchChange","placeholder","onChange","Scroll","props","style","border","children","ErrorBoundary","state","hasError","info","this","setState","Component","App","onRequestAnimeFriends","searchField","onSearchChange","isPending","filteredAnimeFriends","filter","robot","toLowerCase","includes","ErrorBoundry","class","href","version","width","height","viewBox","aria-hidden","fill-rule","d","connect","searchAnimeFriends","event","target","value","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","initialStateSearch","initialStateAnimeFriends","logger","createLogger","rootReducers","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0714b9ff.chunk.js","sourcesContent":["import { apiCall } from './api/api'\nimport {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ANIME_FRIENDS_PENDING,\n  REQUEST_ANIME_FRIENDS_SUCCESS,\n  REQUEST_ANIME_FRIENDS_FAILED\n } from './constants'\n\n\nexport const setSearchField = (text) => ({ type: CHANGE_SEARCHFIELD, payload: text })\n\nexport const requestAnimeFriends = () => (dispatch) => {\n  dispatch({ type: REQUEST_ANIME_FRIENDS_PENDING })\n  apiCall('https://princ09.github.io/json_server/anime.json')\n    .then(data => dispatch({ type: REQUEST_ANIME_FRIENDS_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_ANIME_FRIENDS_FAILED, payload: error }))\n}","export const apiCall = (link) =>\n  fetch(link).then(response => response.json())","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\n\nexport const REQUEST_ANIME_FRIENDS_PENDING = 'REQUEST_ANIME_FRIENDS_PENDING';\nexport const REQUEST_ANIME_FRIENDS_SUCCESS = 'REQUEST_ANIME_FRIENDS_SUCCESS';\nexport const REQUEST_ANIME_FRIENDS_FAILED = 'REQUEST_ANIME_FRIENDS_FAILED';","import React from 'react';\n\nconst Card = ({ name, email, profile }) => {\n  return (\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n      <img alt='animeFriends' src={`https://princ09.github.io/${profile}`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ animeFriends }) => {\n  return (\n    <div>\n      {\n        animeFriends.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              id={animeFriends[i].id}\n              profile={animeFriends[i].profile}\n              name={animeFriends[i].name}\n              email={animeFriends[i].email}\n              />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search animeFriends'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ border: '5px solid black'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from 'react'\n\nclass ErrorBoundary extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField, requestAnimeFriends } from '../actions';\n\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nimport './App.css';\n\n// parameter state comes from index.js provider store state(rootReducers)\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchAnimeFriends.searchField,\n    animeFriends: state.requestAnimeFriends.animeFriends,\n    isPending: state.requestAnimeFriends.isPending\n  }\n}\n\n// dispatch the DOM changes to call an action. note mapStateToProps returns object, mapDispatchToProps returns function\n// the function returns an object then uses connect to change the data from redecers.\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestAnimeFriends: () => dispatch(requestAnimeFriends())\n  }\n}\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestAnimeFriends();\n  }\n\n  render() {\n    const { animeFriends, searchField, onSearchChange, isPending } = this.props;\n    const filteredAnimeFriends = animeFriends.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return (\n      <div className='tc'>\n        <h1 className='f1'>Anime Friends</h1>\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n          { isPending ? <h1>Loading</h1> :\n            <ErrorBoundry>\n              <CardList animeFriends={filteredAnimeFriends} />\n            </ErrorBoundry>\n          }\n        </Scroll>\n        <a class=\"nav-link\" href=\"https://github.com/princ09/anime_friends_react\"><span class=\"d-none d-sm-inline\">View on GitHub </span><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-mark-github\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"></path></svg></a>\n      </div>\n    );\n  }\n}\n\n// action done from mapDispatchToProps will channge state from mapStateToProps\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ANIME_FRIENDS_PENDING,\n  REQUEST_ANIME_FRIENDS_SUCCESS,\n  REQUEST_ANIME_FRIENDS_FAILED\n } from './constants';\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nexport const searchAnimeFriends = (state=initialStateSearch, action={}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, {searchField: action.payload})\n    default:\n      return state\n  }\n}\n\nconst initialStateAnimeFriends = {\n  animeFriends: [],\n  isPending: true\n}\n\nexport const requestAnimeFriends = (state=initialStateAnimeFriends, action={}) => {\n  switch (action.type) {\n    case REQUEST_ANIME_FRIENDS_PENDING:\n      return Object.assign({}, state, {isPending: true})\n    case REQUEST_ANIME_FRIENDS_SUCCESS:\n      return Object.assign({}, state, {animeFriends: action.payload, isPending: false})\n    case REQUEST_ANIME_FRIENDS_FAILED:\n      return Object.assign({}, state, {error: action.payload})\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport 'tachyons';\n\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { requestAnimeFriends, searchAnimeFriends } from './reducers'\n\nimport './index.css';\n\nconst logger = createLogger() \n\nconst rootReducers = combineReducers({requestAnimeFriends, searchAnimeFriends})\n\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}